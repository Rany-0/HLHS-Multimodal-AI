#分层分析，堆叠柱状图，输入为混淆矩阵
import matplotlib.pyplot as plt
import numpy as np
from matplotlib.ticker import MultipleLocator, FormatStrFormatter
# 数据
# data = np.array([[19, 0, 0], [1, 23, 4], [0, 4, 37]])#训练集
data = np.array([[31, 1],[3, 7] ])#测试集【健康：异常】
# 颜色列表
color_list = ['#9BBBE1','#DD9F75' ]
# X轴标签
labels = ['low_probability',  'high_probability']
# 柱子宽度
bar_width = 0.4
# 创建堆叠柱状图
fig, ax = plt.subplots(figsize=(5,6))
ax.bar(np.arange(len(data[0])), data[0], width=bar_width, color=color_list[0])
for i in range(1, len(data)):
    ax.bar(np.arange(len(data[0])), data[i], width=bar_width, bottom=np.sum(data[:i], axis=0), color=color_list[i])
# #加粗边框
# for axis in ['top','bottom','left','right']:
#     ax.spines[axis].set_linewidth(1.3)
# #使x字体变大
# plt.xticks(fontsize=14)
# plt.yticks(fontsize=14)
#控制y轴范围
plt.ylim(0, 150)
# 添加图例和X轴标签
ymajorLocator   = MultipleLocator(5)#主刻度
ax.yaxis.set_major_locator(ymajorLocator)
plt.xticks(np.arange(len(labels)), labels)
# 添加图例
plt.legend(['LHH',  'HLHS'],loc='upper left')
# plt.ylabel('Number of Pictures')
# plt.xlabel('Train_data hierarchical analysis')
# 显示图形
# plt.savefig('/data2/home/xxwu/medlab/curve/trainbarplot.png',dpi=600)
plt.show()


import matplotlib.pyplot as plt
import numpy as np
from matplotlib.ticker import MultipleLocator

# 数据
data1=np.array([[127, 1], [1, 35]])
data2 = np.array([[31, 1], [3, 7]])  # 测试集【健康：异常】
# 颜色列表
color_list = ['#9BBBE1', '#DD9F75']
# X轴标签
labels = ['low_probability', 'high_probability']
# 柱子宽度
bar_width = 0.4
# 创建堆叠柱状图
fig, ax = plt.subplots(figsize=(5, 6))
ax.bar(np.arange(len(data[0])), data[0], width=bar_width, color=color_list[0])
for i in range(1, len(data)):
    ax.bar(np.arange(len(data[0])), data[i], width=bar_width, bottom=np.sum(data[:i], axis=0), color=color_list[i])

# 控制y轴范围
plt.ylim(0, 40)

# 设置y轴主刻度间隔
ymajorLocator = MultipleLocator(5)
ax.yaxis.set_major_locator(ymajorLocator)

# 设置x轴刻度和标签
plt.xticks(np.arange(len(labels)), labels, fontsize=12)
# 添加图例
plt.legend(['LHH', 'HLHS'], loc='upper left', fontsize=12)

# 设置标题和坐标轴标签
plt.title('Test Data Hierarchical Analysis', fontsize=18)
plt.xlabel('Prediction', fontsize=14)
plt.ylabel('Number of Pictures', fontsize=14)

# 显示图形
plt.show()


import matplotlib.pyplot as plt
import numpy as np

data1 = np.array([[127, 1], [1, 35]])
data2 = np.array([[31, 1], [3, 7]])

# 颜色列表
color_list = ['#9BBBE1', '#DD9F75']

# X轴标签
labels = ['low_probability', 'high_probability']

# 柱子宽度
bar_width = 0.4

# 创建堆叠柱状图
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))

# 绘制第一个数据集的柱状图
ax1.bar(np.arange(len(data1[0])), data1[0], width=bar_width, color=color_list[0])

for i in range(1, len(data1)):
    ax1.bar(np.arange(len(data1[0])), data1[i], width=bar_width, bottom=np.sum(data1[:i], axis=0), color=color_list[i])

# 绘制第二个数据集的柱状图

for i in range(len(data2)):
    ax2.bar(np.arange(len(data2[0])) + bar_width, data2[i], width=bar_width, bottom=np.sum(data2[:i], axis=0), color=color_list[i])

# 设置x轴标签
plt.xticks(np.arange(len(labels)) + bar_width / 2, labels, fontsize=12)

# 添加图例
plt.legend(['LHH', 'HLHS'], loc='upper left', fontsize=12)

# 设置标题和坐标轴标签
# plt.title('Hierarchical Analysis Comparison', fontsize=18)
# plt.xlabel('Prediction', fontsize=14)
# plt.ylabel('Number of Pictures', fontsize=14)

# 显示图形
plt.subplots_adjust(wspace=None, hspace=2)
plt.show()

import matplotlib.pyplot as plt
import numpy as np

data1 = np.array([[127, 1], [1, 35]])
data2 = np.array([[31, 1], [3, 7]])

# 颜色列表
color_list = ['#9BBBE1', '#DD9F75']

# X轴标签
labels = ['low_probability', 'high_probability']

# 柱子宽度
bar_width = 0.4

# 创建堆叠柱状图
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))

# 绘制第一个数据集的柱状图
for i in range(len(data1)):
    ax1.bar(np.arange(len(data1[0])) + bar_width*i, data1[i], width=bar_width, color=color_list[i])

# 添加第一个数据集的图例
ax1.legend(['LHH', 'HLHS'], loc='upper left', fontsize=12)

# 绘制第二个数据集的柱状图
for i in range(len(data2)):
    ax2.bar(np.arange(len(data2[0])) + bar_width*i, data2[i], width=bar_width, color=color_list[i])

# 添加第二个数据集的图例
ax2.legend(['LHH', 'HLHS'], loc='upper left', fontsize=12)

# 设置x轴标签
ax1.set_xticks(np.arange(len(labels)) + bar_width / 2)
ax1.set_xticklabels(labels, fontsize=12)
ax2.set_xticks(np.arange(len(labels)) + bar_width / 2)
ax2.set_xticklabels(labels, fontsize=12)

# 设置标题和坐标轴标签
# plt.title('Hierarchical Analysis Comparison', fontsize=18)
# plt.xlabel('Prediction', fontsize=14)
# plt.ylabel('Number of Pictures', fontsize=14)

# 显示图形
plt.subplots_adjust(wspace=None, hspace=2)
plt.show()


import matplotlib.pyplot as plt
import numpy as np

data1 = np.array([[127, 1],[1, 35]])
data2 = np.array([[31, 1],[3, 7]])

# 颜色列表
color_list = ['#9BBBE1','#DD9F75' ]

# X轴标签
labels = ['low_probability', 'high_probability']

# 柱子宽度
bar_width = 0.4

# 创建堆叠柱状图
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(20, 10))

# 绘制第一个数据集的柱状图
for i in range(len(data1)):
    ax1.bar(np.arange(len(data1[0])), data1[i], width=bar_width, color=color_list[i])

# 添加第一个数据集的图例
ax1.legend(['LHH', 'HLHS'], loc='upper left', fontsize=12)

# 绘制第二个数据集的柱状图
for i in range(len(data2)):
    ax2.bar(np.arange(len(data2[0])), data2[i], width=bar_width, color=color_list[i])

# 添加第二个数据集的图例
ax2.legend(['LHH', 'HLHS'], loc='upper left', fontsize=12)

# 设置x轴标签
ax1.set_xticks(np.arange(len(labels)))
ax1.set_xticklabels(labels, fontsize=12)
ax2.set_xticks(np.arange(len(labels)))
ax2.set_xticklabels(labels, fontsize=12)

# 设置y轴范围
ax1.set_ylim([0, 140])
ax2.set_ylim([0, 140])

# 设置标题和坐标轴标签
# plt.title('Hierarchical Analysis Comparison', fontsize=18)
# plt.xlabel('Prediction', fontsize=14)
# plt.ylabel('Number of Pictures', fontsize=14)

# 显示图形
plt.subplots_adjust(wspace=None, hspace=2)
plt.show()


